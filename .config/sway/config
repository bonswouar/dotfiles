

# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables

# catppuccin frappe theme
include catppuccin-frappe
# target                 title     bg    text   indicator  border
#client.focused           $lavender $base $text  $rosewater $lavender
client.focused           $lavender $crust $text  $rosewater $lavender
client.focused_inactive  $overlay0 $base $text  $rosewater $overlay0
client.unfocused         $overlay0 $base $text  $rosewater $overlay0
client.urgent            $peach    $base $peach $overlay0  $peach
client.placeholder       $overlay0 $base $text  $overlay0  $overlay0
client.background        $base
gaps inner 6

#
# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Your preferred terminal emulator
# Recommends: foot
set $term foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# Recommends: rofi-wayland
set $rofi_cmd rofi \
        -terminal '$term'
# Shows a combined list of the applications with desktop files and
# executables from PATH.
# TODO: add window with the next release of rofi-wayland
set $menu $rofi_cmd -show combi \
 -modes "combi,window,power-menu:rofi-power-menu --confirm ''" \
 -combi-modes "drun,run"

# autotilling
exec_always python $HOME/.local/bin/autotiling

# cliphist
exec  wl-paste --type text --watch ~/.local/bin/cliphist store
exec  wl-paste --type image --watch ~/.local/bin/cliphist store
# empty clip history on boot
exec $HOME/.local/bin/cliphist wipe

# sway unfullscreen
exec $HOME/.local/bin/sway-unfullscreen.sh

# battery notify
exec /usr/local/bin/battnotify

# Enables inhibit_idle when playing audio
exec sway-audio-idle-inhibit

# redshift
exec wlsunset -l $LATITUDE -L $LONGITUDE -t 5000

## Rofi // Clipboard and Calculator // Óúè C ##
bindsym $mod+c exec rofi -show clipboard -modes "clipboard:~/.local/bin/cliphist-rofi-img,calc" -calc-command "wl-copy '{result}'"
# empty calc history on boot
exec rm -f $HOME/.local/share/rofi/rofi_calc_history

## Rofi // File search // Óúè  Û∞ò∂ F ##
bindsym $mod+Shift+f exec fd --type f . $HOME | rofi -keep-right -dmenu -i -p FILES -multi-select | xargs -I {} xdg-open {}

## Rofi // Systemd management // Óúè  Û∞ò∂ S ##
bindsym $mod+Shift+s exec $HOME/.local/bin/rofi-systemd

## Rofi // Hotkeys help // Óúè  Û∞ò∂ ? ##
bindsym $mod+shift+comma exec rofi -modi hotkeys:~/.local/bin/rofi-shortcut.sh -show hotkeys -theme $HOME/.config/rofi/catppuccin-frappe-compact.rasi

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# Requires: desktop-backgrounds-compat, swaybg
output * bg $HOME/background.jpg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
#output * adaptive_sync on

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout 300 "$HOME/.local/bin/swaylock_and_dunst_pause.sh" \
         timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
         before-sleep "$HOME/.local/bin/swaylock_and_dunst_pause.sh"
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
input "1:1:AT_Translated_Set_2_keyboard" {
    xkb_layout "fr"
    xkb_variant "azerty"
}
input "type:touchpad" {
    tap enabled
    natural_scroll enabled
    # disable (touchpad) while typing
    dwt enabled
    # disable (touchpad) while track pointing
    dwtp enabled
    # tap with 1 finger = left click, 2 fingers = right click, 3 fingers = middle click
    tap_button_map lrm
    accel_profile "flat"
    scroll_factor 0.7
}
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    ## Launch // Terminal // Óúè  ‚èé ##
    bindsym $mod+Return exec $term

    ## Launch // Lock session // Óúè  Û∞ò∂ L ##
    bindsym $mod+Shift+l exec $HOME/.local/bin/swaylock_and_dunst_pause.sh

    ## Navigation // Kill focused window // Óúè  Û∞ò∂ Q ##
    bindsym $mod+Shift+q kill

    ## Launch // Applications // Óúè D ##
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    ## Sway // Reload // Óúè  Û∞ò∂ C ##
    bindsym $mod+Shift+c reload

    ## Sway // Exit // Óúè  Û∞ò∂ E ##
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
    ## Navigation // Move focus // Óúè  ÔÅá ##
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    ## Navigation // Move window // Óúè  Û∞ò∂  ÔÅá ##
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    ## Navigation // Switch to workspace // Óúè 1 ##
	bindsym $mod+ampersand workspace 1
	bindsym $mod+eacute workspace 2
	bindsym $mod+quotedbl workspace 3
	bindsym $mod+apostrophe workspace 4
	bindsym $mod+parenleft workspace 5
	bindsym $mod+minus workspace 6
	bindsym $mod+egrave workspace 7
	bindsym $mod+underscore workspace 8
	bindsym $mod+ccedilla workspace 9
	bindsym $mod+agrave workspace 10
    # Move focused container to workspace
    ## Navigation // Move window to workspace // Óúè  Û∞ò∂ 1 ##
	bindsym $mod+Shift+ampersand move container to workspace 1
	bindsym $mod+Shift+eacute move container to workspace 2
	bindsym $mod+Shift+quotedbl move container to workspace 3
	bindsym $mod+Shift+apostrophe move container to workspace 4
	bindsym $mod+Shift+parenleft move container to workspace 5
	bindsym $mod+Shift+minus move container to workspace 6
	bindsym $mod+Shift+egrave move container to workspace 7
	bindsym $mod+Shift+underscore move container to workspace 8
	bindsym $mod+Shift+ccedilla move container to workspace 9
	bindsym $mod+Shift+agrave move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

## Navigation // Switch to next workspace // Óúè  Û∞åí ##
bindsym $mod+Tab workspace next
## Navigation // Switch to previous workspace // Óúè  Û∞ò∂  Û∞åí ##
bindsym $mod+Shift+Tab workspace prev

## Rofi // Take screenshot // Óúè  üñ® ##
bindsym $mod+Print exec ~/.local/bin/grimshot-rofi.sh

### Static workspaces
# Desktop 1 - terms & others
# Desktop 2 - Librewolf
assign [title="LibreWolf"] 2
for_window [title="LibreWolf"] focus
# Desktop 3 - LibreWolf private windows
for_window [title="LibreWolf Private Browsing"] move to workspace 3
for_window [title="LibreWolf Private Browsing"] focus
# Desktop 4 - VSCodium
assign [class="VSCodium"] 4
for_window [class="VSCodium"] focus
# Desktop 5 - Instant Messaging
for_window [app_id="FFPWA-01JYHB3HAPG7AZ0Y0TS4CWEMMN"] layout tabbed
assign [app_id="FFPWA-01JYHB3HAPG7AZ0Y0TS4CWEMMN"] 5
for_window [app_id="FFPWA-01JYHE7GTE02WY74XXMGS0ZCWG"] layout tabbed
assign [app_id="FFPWA-01JYHE7GTE02WY74XXMGS0ZCWG"] 5
for_window [class="Signal"] layout tabbed
assign [class="Signal"] 5
# Desktop 6 - Thunderbird
for_window [app_id="net.thunderbird.Thunderbird"] floating enable
for_window [app_id="net.thunderbird.Thunderbird" title=".* - Mozilla Thunderbird"] floating disable
assign [app_id="net.thunderbird.Thunderbird"] 6
# Desktop 7 - Multimedia
assign [app_id="com.github.iwalton3.jellyfin-media-player"] 7
# Desktop 8 - Games
assign [class="steam"] 8
for_window [class="steam"] floating enable

# Floating windows
for_window [app_id="com.nextcloud.desktopclient.nextcloud"] floating enable
for_window [app_id="org.keepassxc.KeePassXC"] floating enable
for_window [class="Joplin"] floating enable
for_window [app_id="qalculate-gtk"] floating enable
for_window [app_id="guvcview"] floating enable
for_window [instance="guvcview"] floating enable
for_window [app_id="setroubleshoot"] floating enable
for_window [app_id="blueman-manager"] floating enable
for_window [app_id="mpv"] floating enable

## Notifications // Toggle On/Off // Óúè  Û±ä´ ##
bindsym $mod+F1 exec --no-startup-id ~/.local/bin/dunst-toggle.sh
## Battery // Toggle TLP fullcharge mode // Óúè  Û±ä∑ ##
bindsym $mod+Escape exec --no-startup-id ~/.local/bin/tlp-toggle-fullcharge.sh

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    ## Navigation // Layout stacking mode // Óúè S ##
    bindsym $mod+s layout stacking
    ## Navigation // Layout tabbed mode // Óúè W ##
    bindsym $mod+w layout tabbed
    ## Navigation // Layout split mode // Óúè E ##
    bindsym $mod+e layout toggle split

    ## Navigation // Fullscreen // Óúè F ##
    bindsym $mod+f fullscreen

    ## Navigation // Toggle tiling/floating mode // Óúè  Û∞ò∂  Û±Åê ##
    bindsym $mod+Shift+space floating toggle

    ## Navigation // Focus toggle tiling/floating area // Óúè  Û±Åê ##
    bindsym $mod+space focus mode_toggle

    ## Navigation // Focus to parent // Óúè A ##
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    ## Navigation // Move to scratchpad // Óúè  Û∞ò∂ = ##
    bindsym $mod+Shift+equal move scratchpad

    ## Navigation // Show next scratchpad // Óúè = ##
    bindsym $mod+equal scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # down will shrink the containers height
    # up will grow the containers height
    bindsym Left resize shrink width 10px
    bindsym Right resize grow width 10px
    bindsym Down resize shrink height 10px
    bindsym Up resize grow height 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
## Navigation // Resize mode // Óúè R ##
bindsym $mod+r mode "resize"

# Include configs from 3 locations:
#  - /usr/share/sway/config.d
#  - /etc/sway/config.d
#  - $XDG_CONFIG_HOME/sway/config.d ($HOME/.config/sway/config.d)
#
# If multiple directories contain the files with the same name, the later
# directory takes precedence; `$XDG_CONFIG_HOME/sway/config.d/20-swayidle.conf`
# will always be loaded instead of `/usr/share/sway/config.d/20-swayidle.conf`
# or `/etc/sway/config.d/20-swayidle.conf`
#
# This mechanism permits overriding our default configuration per-system
# (/etc) or per-user ($XDG_CONFIG_HOME) basis. Just create the file you
# want to modify/override in the higher-level directory.
#
# For example, to disable the default bar from Fedora configs, you'll need to
#     $ echo -n > "$HOME/.config/sway/config.d/90-bar.conf"
#
# Note the quoting, the $() and the arguments quoting. All the parts are equally
# important to make the magic work. And if you want to learn the secret behind
# the trick, it's all in the `wordexp(3)`.
#
include '$(/usr/libexec/sway/layered-include "/usr/share/sway/config.d/*.conf" "/etc/sway/config.d/*.conf" "${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/*.conf")'

### key bindings for external apps
## foot // New window // ‚åò  Û∞ò∂ N ##
#
## foot // URL mode // ‚åò  Û∞ò∂ O ##
#
## foot // Search // ‚åò  Û∞ò∂ R ##
#
